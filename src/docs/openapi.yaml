openapi: 3.1.0
info:
  title: NFTTOOLS API DOCS FOR MAGIC EDEN
  version: 1.0.0
  description: A comprehensive API for interacting with Magic Eden, providing tools to handle collections, tokens, activity, bid, list, and buy on Solana, Bitcoin, Ethereum, Base, and Polygon chains.
servers:
  - url: https://nfttools.pro/magiceden
    description: Production server

tags:
  - name: Solana
    description: Endpoints related to Solana blockchain
  - name: Bitcoin
    description: Endpoints related to Bitcoin blockchain
  - name: Ethereum
    description: Endpoints related to Ethereum blockchain
  - name: Base
    description: Endpoints related to Base blockchain
  - name: Polygon
    description: Endpoints related to Polygon blockchain
  - name: Rewards
    description: Check Diamond Rewards Eligibility

security:
  - ApiKeyAuth: []

paths:
  /rewards/diamond/eligibility:
    get:
      summary: Check Diamond Rewards Eligibility
      description: Retrieve the eligibility status for Diamond Rewards for a specific wallet address on a given blockchain.
      tags:
        - Rewards
      parameters:
        - name: walletAddress
          in: query
          required: true
          schema:
            type: string
          description: The wallet address to check for eligibility
          example: EfdC1uyq5gWqHQYxSENscwNZKY8k2z8CXkpmPRB7mn2N
        - name: chain
          in: query
          required: true
          schema:
            type: string
            enum: [solana, ethereum, polygon, base, bitcoin] # Assuming these are the possible chains
          description: The blockchain on which to check eligibility
          example: solana
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  eligible:
                    type: boolean
                    description: Indicates whether the wallet is eligible for Diamond Rewards
                  tier:
                    type: string
                    description: The tier of Diamond Rewards the wallet is eligible for, if applicable
                  requirements:
                    type: object
                    description: Details about the requirements for eligibility
                    properties:
                      # Add specific requirement properties here
                  # Add other properties that might be in the response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal server error
  #SOLANA
  /collection_stats/search/solana:
    servers:
      - url: https://nfttools.pro/magiceden_stats
    get:
      summary: Search Solana Collection Stats
      description: Retrieve collection statistics for Solana NFTs on Magic Eden, with options for sorting, filtering, and pagination.
      tags:
        - Solana
      parameters:
        - name: direction
          in: query
          required: true
          schema:
            type: string
            enum: [asc, desc]
          description: The direction to sort the results
          example: desc
        - name: sort
          in: query
          required: true
          schema:
            type: string
            enum: [volume, floorPrice, listedCount] # Assuming these are possible sort options
          description: The field to sort the results by
          example: volume
        - name: window
          in: query
          required: true
          schema:
            type: string
            enum: [1d, 7d, 30d] # Assuming these are the possible values
          description: The time window for the stats
          example: 1d
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 100 # Assuming 100 is the maximum allowed
          description: The maximum number of results to return
          example: 100
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            minimum: 0
          description: The number of results to skip (for pagination)
          example: 0
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  collections:
                    type: array
                    items:
                      type: object
                      properties:
                        # Define properties of each collection here
                        # This is a placeholder and should be replaced with the actual response structure
                        symbol:
                          type: string
                        name:
                          type: string
                        volume:
                          type: number
                        floorPrice:
                          type: number
                        listedCount:
                          type: integer
                  # Add other top-level properties if they exist in the response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal server error

  /rpc/getCollectionHolderStats/{collectionSymbol}:
    get:
      summary: Get Collection Holder Statistics
      description: Retrieve holder statistics for a specific NFT collection on Magic Eden.
      tags:
        - Solana
      parameters:
        - name: collectionSymbol
          in: path
          required: true
          schema:
            type: string
          description: The symbol or identifier of the collection
          example: rugens_drip
        - name: edge_cache
          in: query
          required: false
          schema:
            type: boolean
          description: Whether to use edge caching for the request
          example: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalHolders:
                    type: integer
                    description: Total number of unique holders in the collection
                  uniqueHolders:
                    type: number
                    description: Percentage of unique holders (possibly out of total supply)
                  averageHoldingPerWallet:
                    type: number
                    description: Average number of NFTs held per wallet
                  holdersDistribution:
                    type: object
                    description: Distribution of holders by number of NFTs held
                    properties:
                      "1":
                        type: integer
                        description: Number of wallets holding 1 NFT
                      "2-5":
                        type: integer
                        description: Number of wallets holding 2 to 5 NFTs
                      # Add more ranges as needed
                  # Add other properties that might be in the response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
        "500":
          description: Internal server error

  /idxv2/getAllNftsByCollectionSymbol:
    get:
      summary: Retrieve all NFTs by collection symbol
      tags:
        - Solana
      parameters:
        - name: collectionSymbol
          in: query
          required: true
          schema:
            type: string
          example: rugens_drip
        - name: direction
          in: query
          required: true
          schema:
            type: integer
            enum: [1, -1]
            default: 1
          example: 1
        - name: field
          in: query
          required: true
          schema:
            type: integer
            default: 1
          example: 1
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            default: 1
          example: 1
        - name: token22StandardFilter
          in: query
          required: true
          schema:
            type: integer
            default: 1
          example: 1
        - name: mplCoreStandardFilter
          in: query
          required: true
          schema:
            type: integer
            default: 1
          example: 1
        - name: agg
          in: query
          required: true
          schema:
            type: integer
            default: 3
          example: 3
        - name: compressionMode
          in: query
          required: true
          schema:
            type: string
            enum: [both, compressed, uncompressed]
            default: both
          example: both
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: NFTs not found
        "500":
          description: Internal server error

  /rpc/getNFTsByOwner/{ownerAddress}:
    get:
      summary: Retrieve NFTs by owner
      tags:
        - Solana
      parameters:
        - name: ownerAddress
          in: path
          required: true
          schema:
            type: string
          example: EfdC1uyq5gWqHQYxSENscwNZKY8k2z8CXkpmPRB7mn2N
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: NFTs not found
        "500":
          description: Internal server error

  /rpc/getCollectionAttributesStats/{collectionSymbol}:
    get:
      summary: Retrieve collection attributes stats
      tags:
        - Solana
      parameters:
        - name: collectionSymbol
          in: path
          required: true
          schema:
            type: string
          example: drip_tarimosi
        - name: status
          in: query
          required: true
          schema:
            type: string
            enum: [all, active, inactive]
            default: all
          example: all
        - name: edge_cache
          in: query
          required: true
          schema:
            type: boolean
            default: true
          example: true
        - name: agg
          in: query
          required: true
          schema:
            type: integer
            default: 3
          example: 3
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: Collection not found
        "500":
          description: Internal server error

  /collections/{collectionSymbol}/organization:
    get:
      summary: Retrieve collection organization details
      tags:
        - Solana
      parameters:
        - name: collectionSymbol
          in: path
          required: true
          schema:
            type: string
          example: drip_tarimosi
        - name: edge_cache
          in: query
          required: true
          schema:
            type: boolean
            default: true
          example: true
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: Collection not found
        "500":
          description: Internal server error

  /sft/collection/{collectionSymbol}:
    get:
      summary: Retrieve collection details with pagination
      tags:
        - Solana
      parameters:
        - name: collectionSymbol
          in: path
          required: true
          schema:
            type: string
          example: drip_tarimosi
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
          example: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 20
          example: 20
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: Collection not found
        "500":
          description: Internal server error

  /rpc/getCollectionEscrowStats/{collectionSymbol}:
    get:
      summary: Retrieve collection escrow stats
      tags:
        - Solana
      parameters:
        - name: collectionSymbol
          in: path
          required: true
          schema:
            type: string
          example: drip_tarimosi
        - name: status
          in: query
          required: true
          schema:
            type: string
            enum: [all, active, inactive]
            default: all
          example: all
        - name: edge_cache
          in: query
          required: true
          schema:
            type: boolean
            default: true
          example: true
        - name: agg
          in: query
          required: true
          schema:
            type: integer
            default: 3
          example: 3
        - name: enableFloorWithFee
          in: query
          required: true
          schema:
            type: boolean
            default: true
          example: true
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: Collection not found
        "500":
          description: Internal server error

  /v2/activities:
    get:
      summary: Get Collection Activities
      description: Retrieve activities for a specific NFT collection on Magic Eden, with options for filtering by activity type and pagination.
      tags:
        - Magic Eden
        - Solana
        - Activities
      parameters:
        - name: activityTypes
          in: query
          required: true
          schema:
            type: string
          description: JSON array of activity types to filter by, URL encoded
          example: "%5B%22sale%22%2C%22item_offer%22%2C%22pool_offer%22%2C%22attributes_offer%22%2C%22list%22%2C%22edit_list%22%2C%22delist%22%5D"
        - name: collectionSymbol
          in: query
          required: true
          schema:
            type: string
          description: The symbol or identifier of the collection
          example: drip_tarimosi
        - name: onChainCollectionAddress
          in: query
          required: true
          schema:
            type: string
          description: The on-chain address of the collection
          example: TAuAUS8neSS3KPSqLXQ7u1aWkKgnVPzqNizihDYuXvN
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 50 # Assuming 50 is the maximum allowed
          description: The maximum number of results to return
          example: 50
        - name: enableSNS
          in: query
          required: true
          schema:
            type: boolean
          description: Whether to enable SNS (possibly Solana Name Service) resolution
          example: true
      responses:
        "200":
          description: Successful response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Collection not found
        "500":
          description: Internal server error

  /idxv2/getListedNftsByCollectionSymbol:
    get:
      summary: Retrieve listed NFTs by collection symbol
      tags:
        - Solana
      parameters:
        - name: collectionSymbol
          in: query
          required: true
          schema:
            type: string
          example: drip_tarimosi
        - name: direction
          in: query
          required: false
          schema:
            type: integer
            enum: [1, 2]
            default: 2
          example: 2
        - name: field
          in: query
          required: false
          schema:
            type: integer
            default: 1
          example: 1
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
          example: 100
        - name: token22StandardFilter
          in: query
          required: false
          schema:
            type: integer
            default: 1
          example: 1
        - name: mplCoreStandardFilter
          in: query
          required: false
          schema:
            type: integer
            default: 1
          example: 1
        - name: mode
          in: query
          required: false
          schema:
            type: string
            enum: [all, listed]
            default: all
          example: all
        - name: agg
          in: query
          required: false
          schema:
            type: integer
            default: 3
          example: 3
        - name: compressionMode
          in: query
          required: false
          schema:
            type: string
            enum: [none, both, compressed, uncompressed]
            default: both
          example: both
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: NFTs not found
        "500":
          description: Internal server error

  /collection_watchlists/action/checkUserWatchCollection/{collectionSymbol}:
    get:
      summary: Check if user is watching a collection
      tags:
        - Solana
      parameters:
        - name: collectionSymbol
          in: path
          required: true
          schema:
            type: string
          example: drip_tarimosi
        - name: walletAddress
          in: query
          required: true
          schema:
            type: string
          example: EfdC1uyq5gWqHQYxSENscwNZKY8k2z8CXkpmPRB7mn2N
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: Collection or user not found
        "500":
          description: Internal server error

  /collections/{collectionSymbol}:
    get:
      summary: Retrieve collection details
      tags:
        - Solana
      parameters:
        - name: collectionSymbol
          in: path
          required: true
          schema:
            type: string
          example: drip_tarimosi
        - name: edge_cache
          in: query
          required: false
          schema:
            type: boolean
            default: true
          example: true
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: Collection not found
        "500":
          description: Internal server error

  /idxv2/getBidsByMintAddresses:
    get:
      summary: Retrieve bids by mint addresses
      tags:
        - Solana
      parameters:
        - name: hideExpired
          in: query
          required: false
          schema:
            type: boolean
            default: true
          example: true
        - name: mintAddresses
          in: query
          required: true
          schema:
            type: string
          example: DmdF3ACqvjmRh4mayaw3SAKuttVQ3tZkmut1N4RxSLCG
        - name: direction
          in: query
          required: false
          schema:
            type: integer
            enum: [1, 2]
            default: 1
          example: 1
        - name: field
          in: query
          required: false
          schema:
            type: integer
            default: 2
          example: 2
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 500
          example: 500
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
          example: 0
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: Bids not found
        "500":
          description: Internal server error

  /rpc/getNFTByMintAddress/{mintAddress}:
    get:
      summary: Retrieve NFT by mint address
      tags:
        - Solana
      parameters:
        - name: mintAddress
          in: path
          required: true
          schema:
            type: string
          example: DmdF3ACqvjmRh4mayaw3SAKuttVQ3tZkmut1N4RxSLCG
        - name: agg
          in: query
          required: false
          schema:
            type: integer
            default: 3
          example: 3
        - name: useRarity
          in: query
          required: false
          schema:
            type: boolean
            default: true
          example: true
        - name: includeBurntMint
          in: query
          required: false
          schema:
            type: boolean
            default: true
          example: true
        - name: compressionMode
          in: query
          required: false
          schema:
            type: string
            enum: [none, both, compressed, uncompressed]
            default: both
          example: both
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: NFT not found
        "500":
          description: Internal server error

  /rpc/getNFTStatsByMintAddress/{mintAddress}:
    get:
      summary: Retrieve NFT stats by mint address
      tags:
        - Solana
      parameters:
        - name: mintAddress
          in: path
          required: true
          schema:
            type: string
          example: DmdF3ACqvjmRh4mayaw3SAKuttVQ3tZkmut1N4RxSLCG
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: NFT stats not found
        "500":
          description: Internal server error

  /v2/collections/{symbol}/activities:
    get:
      summary: Retrieve activities for a collection
      tags:
        - Solana
      parameters:
        - name: symbol
          in: path
          required: true
          schema:
            type: string
          example: drip_tarimosi
        - name: accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
          example: application/json
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: Activities not found
        "500":
          description: Internal server error

  /v2/tokens/{token_mint}/listings:
    get:
      summary: Retrieve listings for a token
      tags:
        - Solana
      parameters:
        - name: token_mint
          in: path
          required: true
          schema:
            type: string
          example: DmdF3ACqvjmRh4mayaw3SAKuttVQ3tZkmut1N4RxSLCG
        - name: accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
          example: application/json
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: Listings not found
        "500":
          description: Internal server error

  /v2/tokens/{token_mint}/offers_received:
    get:
      summary: Retrieve offers received for a token
      tags:
        - Solana
      parameters:
        - name: token_mint
          in: path
          required: true
          schema:
            type: string
          example: DmdF3ACqvjmRh4mayaw3SAKuttVQ3tZkmut1N4RxSLCG
        - name: accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
          example: application/json
        - name: min_price
          in: query
          required: false
          schema:
            type: integer
          example: 1000000
        - name: max_price
          in: query
          required: false
          schema:
            type: integer
          example: 100000000
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
          example: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 50
          example: 50
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum:
              - updatedAt
              - bidAmount
          example: updatedAt
        - name: sort_direction
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          example: desc
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  offers:
                    type: array
                    items:
                      type: object
                      properties:
                        price:
                          type: string
                          example: "1000000000"
                        buyer:
                          type: string
                          example: EfdC1uyq5gWqHQYxSENscwNZKY8k2z8CXkpmPRB7mn2N
                        mintAddress:
                          type: string
                          example: DmdF3ACqvjmRh4mayaw3SAKuttVQ3tZkmut1N4RxSLCG
                        timestamp:
                          type: string
                          example: 2023-07-04T12:34:56Z
        "400":
          description: Invalid request
        "404":
          description: Offers not found
        "500":
          description: Internal server error

  /v2/tokens/{token_mint}/activities:
    get:
      summary: Retrieve activities for a token
      tags:
        - Solana
      parameters:
        - name: token_mint
          in: path
          required: true
          schema:
            type: string
          example: DmdF3ACqvjmRh4mayaw3SAKuttVQ3tZkmut1N4RxSLCG
        - name: accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
          example: application/json
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
          example: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 50
          example: 50
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: Activities not found
        "500":
          description: Internal server error

  /v2/tokens/{token_mint}:
    get:
      summary: Retrieve token details by mint address
      tags:
        - Solana
      parameters:
        - name: token_mint
          in: path
          required: true
          schema:
            type: string
          example: DmdF3ACqvjmRh4mayaw3SAKuttVQ3tZkmut1N4RxSLCG
        - name: accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
          example: application/json
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: Token not found
        "500":
          description: Internal server error

  /v2/collections/batch/listings:
    post:
      summary: Batch retrieve listings for collections
      tags:
        - Solana
      parameters:
        - name: attributes
          in: query
          schema:
            type: string
          description: |
            Array of arrays of objects representing a filtering mechanism.
            Elements within each inner array are logically ORed, and resulting arrays are ANDed together.
            Each inner array consists of objects with properties traitType (string) and value (string).
            Example: [[{"traitType":"trait1", "value":"value1"},{"traitType":"trait1", "value":"value2"}]]
        - name: offset
          in: query
          schema:
            type: integer
            example: 0
          description: Offset for pagination
        - name: limit
          in: query
          schema:
            type: integer
            example: 50
          description: Number of results per page
        - name: min_price
          in: query
          schema:
            type: integer
            example: 1000000
          description: Minimum price filter
        - name: max_price
          in: query
          schema:
            type: integer
            example: 100000000
          description: Maximum price filter
        - name: sort
          in: query
          schema:
            type: string
            enum:
              - listPrice
              - updatedAt
          example: listPrice
          description: Field to sort the listings
        - name: sort_direction
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
          example: asc
          description: Sort direction for the returned elements
        - name: listingAggMode
          in: query
          schema:
            type: boolean
          example: true
          description: True to return aggregated marketplace listings, false for Magic Eden listings only
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collections:
                  type: array
                  items:
                    type: object
                    properties:
                      symbol:
                        type: string
                        example: drip_tarimosi
                mcc:
                  required: false
                  type: string
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: Listings not found
        "500":
          description: Internal server error

  # BASE

  /collection_stats/search/base:
    servers:
      - url: https://nfttools.pro/magiceden_stats
    get:
      summary: Search Magic Eden Collection Stats on Base
      description: Retrieve collection statistics from Magic Eden on the Base network, with options for sorting and filtering.
      tags:
        - Base
      parameters:
        - name: window
          in: query
          required: true
          schema:
            type: string
            enum: ["1d", "7d", "30d"] # Assuming these are the possible values
          description: The time window for the stats
          example: "1d"
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
          description: The maximum number of results to return
          example: 50
        - name: sort
          in: query
          required: true
          schema:
            type: string
            enum: ["volume", "floorPrice", "listedCount"] # Assuming these are possible sort options
          description: The field to sort the results by
          example: volume
        - name: direction
          in: query
          required: true
          schema:
            type: string
            enum: ["asc", "desc"]
          description: The direction to sort the results
          example: desc
        - name: filter
          in: query
          required: true
          schema:
            type: string
          description: JSON string representing filter criteria
          example: "{}"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  # Define the response schema here based on the actual response structure
                  # This is a placeholder and should be replaced with the actual response structure
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        # Define properties of each item here
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal server error

  /v3/rtp/base/order/v4?signature=${encodeURIComponent(signature):
    post:
      tags:
        - Base
      summary: Submit signed offer
      description: Submit signed offer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      order:
                        type: object
                        properties:
                          kind:
                            type: string
                            example: payment-processor-v2
                          data:
                            type: object
                            properties:
                              kind:
                                type: string
                                example: collection-offer-approval
                              sellerOrBuyer:
                                type: string
                                example: "0xb71425024868e0c9156c3942ac115cd3b56d5559"
                              protocol:
                                type: integer
                                example: 0
                              cosigner:
                                type: string
                                example: "0x32da57e736e05f75aa4fae2e9be60fd904492726"
                              beneficiary:
                                type: string
                                example: "0xb71425024868e0c9156c3942ac115cd3b56d5559"
                              marketplace:
                                type: string
                                example: "0xca9337244b5f04cb946391bc8b8a980e988f9a6a"
                              fallbackRoyaltyRecipient:
                                type: string
                                example: "0x9ccf727dbb547d623ded5ab83c5b0e499eee5532"
                              paymentMethod:
                                type: string
                                example: "0x4200000000000000000000000000000000000006"
                              tokenAddress:
                                type: string
                                example: "0x00b5f2e672f6b8a176bf6ade71238b61360a29e9"
                              amount:
                                type: string
                                example: "1"
                              itemPrice:
                                type: string
                                example: "100000000000000"
                              expiration:
                                type: string
                                example: "1722607020"
                              marketplaceFeeNumerator:
                                type: string
                                example: "200"
                              nonce:
                                type: string
                                example: "69005277841611552456666767078621072521642912468796321438269508217196416860176"
                              masterNonce:
                                type: string
                                example: "0"
                              r:
                                type: string
                                example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                              s:
                                type: string
                                example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                              v:
                                type: integer
                                example: 0
                      orderbook:
                        type: string
                        example: reservoir
                source:
                  type: string
                  example: magiceden.io
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Order processed successfully

  /v3/rtp/base/execute/bid/v5:
    post:
      tags:
        - Base
      summary: Submit offer
      description: Submit offer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maker:
                  type: string
                  example: 0xb71425024868e0c9156c3942AC115Cd3b56d5559
                source:
                  type: string
                  example: magiceden.io
                params:
                  type: array
                  items:
                    type: object
                    properties:
                      collection:
                        type: string
                        example: 0x00b5f2e672f6b8a176bf6ade71238b61360a29e9
                      currency:
                        type: string
                        example: 0x4200000000000000000000000000000000000006
                      quantity:
                        type: integer
                        example: 1
                      weiPrice:
                        type: string
                        example: 100000000000000
                      expirationTime:
                        type: string
                        example: 1722607020
                      orderKind:
                        type: string
                        example: payment-processor-v2
                      orderbook:
                        type: string
                        example: reservoir
                      options:
                        type: object
                        properties:
                          payment-processor-v2:
                            type: object
                            properties:
                              useOffChainCancellation:
                                type: boolean
                                example: true
                      automatedRoyalties:
                        type: boolean
                        example: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true

  /v3/rtp/base/execute/list/v5:
    post:
      tags:
        - Base
      summary: Execute List
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maker:
                  type: string
                  example: "0xb71425024868e0c9156c3942AC115Cd3b56d5559"
                source:
                  type: string
                  example: magiceden.io
                params:
                  type: array
                  items:
                    type: object
                    properties:
                      token:
                        type: string
                        example: "0x9db39ac416c5ec75c2c3ae622d2013ecccc2d74a:9310"
                      weiPrice:
                        type: string
                        example: "10000000000000"
                      orderbook:
                        type: string
                        example: reservoir
                      orderKind:
                        type: string
                        example: payment-processor-v2
                      quantity:
                        type: integer
                        example: 1
                      currency:
                        type: string
                        example: "0x0000000000000000000000000000000000000000"
                      expirationTime:
                        type: string
                        example: "1722598814"
                      automatedRoyalties:
                        type: boolean
                        example: true
                      options:
                        type: object
                        properties:
                          payment-processor-v2:
                            type: object
                            properties:
                              useOffChainCancellation:
                                type: boolean
                                example: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true

  /v3/rtp/base/order/v4?signature=%24{encodeURIComponent(signature)}:
    post:
      tags:
        - Base
      summary: Submit signed listing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      order:
                        type: object
                        properties:
                          kind:
                            type: string
                            example: payment-processor-v2
                          data:
                            type: object
                            properties:
                              kind:
                                type: string
                                example: sale-approval
                              sellerOrBuyer:
                                type: string
                                example: "0xb71425024868e0c9156c3942ac115cd3b56d5559"
                              protocol:
                                type: integer
                                example: "0"
                              cosigner:
                                type: string
                                example: "0x32da57e736e05f75aa4fae2e9be60fd904492726"
                              marketplace:
                                type: string
                                example: "0xca9337244b5f04cb946391bc8b8a980e988f9a6a"
                              fallbackRoyaltyRecipient:
                                type: string
                                example: "0x9db39ac416c5ec75c2c3ae622d2013ecccc2d74a"
                              paymentMethod:
                                type: string
                                example: "0x0000000000000000000000000000000000000000"
                              tokenAddress:
                                type: string
                                example: "0x9db39ac416c5ec75c2c3ae622d2013ecccc2d74a"
                              tokenId:
                                type: string
                                example: "9310"
                              amount:
                                type: string
                                example: "1"
                              itemPrice:
                                type: string
                                example: "10000000000000"
                              expiration:
                                type: string
                                example: "1722598814"
                              marketplaceFeeNumerator:
                                type: string
                                example: "200"
                              maxRoyaltyFeeNumerator:
                                type: string
                                example: "700"
                              nonce:
                                type: string
                                example: "69005277841611552456666767078621072521642912468796321438269508217196416860167"
                              masterNonce:
                                type: string
                                example: 0
                              r:
                                type: string
                                example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                              s:
                                type: string
                                example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                              v:
                                type: integer
                                example: 0
                      orderbook:
                        type: string
                        example: reservoir
                source:
                  type: string
                  example: magiceden.io
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true

  /v3/rtp/base/collections/0x9db39ac416c5ec75c2c3ae622d2013ecccc2d74a/marketplace-configurations/v2:
    get:
      tags:
        - Base
      summary: Get Marketplace configuration
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
  /v3/rtp/base/collections-sets/v1:
    post:
      tags:
        - Base
      summary: Get Collection Set Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collections:
                  type: array
                  items:
                    type: string
                    example: "0x9db39ac416c5ec75c2c3ae622d2013ecccc2d74a"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true

  /v3/rtp/base/users/{address}/tokens/v10:
    get:
      summary: Retrieve user tokens
      tags:
        - Base
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
          example: "0xb71425024868e0c9156c3942AC115Cd3b56d5559"
        - name: includeLastSale
          in: query
          required: false
          schema:
            type: boolean
            default: true
          example: true
        - name: excludeSpam
          in: query
          required: false
          schema:
            type: boolean
            default: true
          example: true
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 50
          example: 50
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            enum: [acquiredAt, price]
            default: acquiredAt
          example: acquiredAt
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
          example: desc
        - name: onlyListed
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: false
        - name: normalizeRoyalties
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: false
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "404":
          description: User not found
        "500":
          description: Internal server error

  /v3/rtp/base/tokens/{token}/activity/v5:
    get:
      tags:
        - Base
      summary: Retrieve token activity
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
          example: "0x9db39ac416c5ec75c2c3ae622d2013ecccc2d74a:9310"
        - name: types
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          example:
            [
              "sale",
              "ask",
              "transfer",
              "mint",
              "bid",
              "bid_cancel",
              "ask_cancel",
            ]
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            enum: [eventTimestamp]
            default: eventTimestamp
          example: eventTimestamp
      responses:
        "200":
          description: Successful response
      "400":
        description: Invalid request
      "404":
        description: Token not found
      "500":
        description: Internal server error

  /v3/rtp/base/orders/asks/v5:
    get:
      tags:
        - Base
      summary: Retrieve active ask orders
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
          example: "0xcb28749c24af4797808364d71d71539bc01e76d4:4865"
        - name: status
          in: header
          required: true
          schema:
            type: string
          example: active
        - name: sortBy
          in: header
          required: true
          schema:
            type: string
          example: price
        - name: excludeEOA
          in: header
          required: true
          schema:
            type: boolean
          example: false
        - name: limit
          in: header
          required: true
          schema:
            type: integer
          example: 100
        - name: normalizeRoyalties
          in: header
          required: true
          schema:
            type: boolean
          example: false
      responses:
        "200":
          description: Successful response
        "400":
          description: Invalid request
        "401":
          description: Unauthorized - Token invalid or expired
        "500":
          description: Internal server error

  /v3/rtp/base/tokens/v7:
    get:
      summary: Retrieve token information
      description: Get detailed information about specific tokens, including attributes, top bid, quantity, and last sale.
      tags:
        - Base
      parameters:
        - name: tokens
          in: query
          required: true
          schema:
            type: string
          description: Comma-separated list of token addresses and IDs in the format address:id
          example: "0x9db39ac416c5ec75c2c3ae622d2013ecccc2d74a:9310"
        - name: limit
          in: query
          schema:
            type: integer
          description: Maximum number of results to return
        - name: excludeSpam
          in: query
          schema:
            type: boolean
          description: Whether to exclude spam tokens
        - name: includeTopBid
          in: query
          schema:
            type: boolean
          description: Whether to include the top bid information
        - name: includeAttributes
          in: query
          schema:
            type: boolean
          description: Whether to include token attributes
        - name: includeQuantity
          in: query
          schema:
            type: boolean
          description: Whether to include token quantity information
        - name: includeLastSale
          in: query
          schema:
            type: boolean
          description: Whether to include the last sale information
        - name: normalizeRoyalties
          in: query
          schema:
            type: boolean
          description: Whether to normalize royalties
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                # Define the response schema here
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal server error

  /v3/rtp/base/orders/bids/v6:
    get:
      summary: Retrieve bids for a collection
      description: Get detailed information about active bids for a specific collection, including criteria metadata and depth.
      tags:
        - Base
      parameters:
        - name: collection
          in: query
          required: true
          schema:
            type: string
          description: The address of the collection
          example: "0x5ca0c41a50fcfec85b91bb4ca5b024b36d9bb120"
        - name: sortBy
          in: query
          schema:
            type: string
            enum: [price]
          description: The field to sort the results by
        - name: status
          in: query
          schema:
            type: string
            enum: [active]
          description: The status of the bids to retrieve
        - name: excludeEOA
          in: query
          schema:
            type: boolean
          description: Whether to exclude EOA (Externally Owned Account) bids
        - name: includeCriteriaMetadata
          in: query
          schema:
            type: boolean
          description: Whether to include criteria metadata
        - name: includeDepth
          in: query
          schema:
            type: boolean
          description: Whether to include depth information
        - name: normalizeRoyalties
          in: query
          schema:
            type: boolean
          description: Whether to normalize royalties
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                # Define the response schema here
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal server error

  /v3/rtp/base/users/{address}/collections/v4:
    get:
      summary: Retrieve user's collections
      description: Get detailed information about collections owned by a specific user address.
      tags:
        - Base
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
          description: The address of the user
          example: "0xb71425024868e0c9156c3942AC115Cd3b56d5559"
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
          description: The number of items to skip before starting to collect the result set
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
          description: The numbers of items to return
        - name: collection
          in: query
          schema:
            type: string
          description: The address of a specific collection to filter by
          example: "0x9db39ac416c5ec75c2c3ae622d2013ecccc2d74a"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                # Define the response schema here
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal server error

  /v3/rtp/base/collections/{collectionAddress}/attributes/all/v4:
    get:
      summary: Retrieve all attributes for a collection
      description: Get detailed information about all attributes associated with a specific collection.
      tags:
        - Base
      parameters:
        - name: collectionAddress
          in: path
          required: true
          schema:
            type: string
          description: The address of the collection
          example: "0x5ca0c41a50fcfec85b91bb4ca5b024b36d9bb120"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                # Define the response schema here
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal server error

  /v3/rtp/base/collections/v7:
    get:
      summary: Retrieve collection information
      description: Get detailed information about specific collections, including sales count, floor price, and other metadata.
      tags:
        - Base
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: The address of the collection
          example: "0x5ca0c41a50fcfec85b91bb4ca5b024b36d9bb120"
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
          description: The number of items to return
        - name: includeSalesCount
          in: query
          schema:
            type: boolean
          description: Whether to include the sales count
        - name: excludeSpam
          in: query
          schema:
            type: boolean
          description: Whether to exclude spam collections
        - name: displayCurrency
          in: query
          schema:
            type: string
          description: The address of the currency to display prices in
          example: "0x4200000000000000000000000000000000000006"
        - name: normalizeRoyalties
          in: query
          schema:
            type: boolean
          description: Whether to normalize royalties
        - name: includeQuantity
          in: query
          schema:
            type: boolean
          description: Whether to include quantity information
        - name: includeLastSale
          in: query
          schema:
            type: boolean
          description: Whether to include the last sale information
        - name: excludeBurnt
          in: query
          schema:
            type: boolean
          description: Whether to exclude burnt tokens
        - name: sortBy
          in: query
          schema:
            type: string
            enum: [floorAskPrice]
          description: The field to sort the results by
        - name: sortDirection
          in: query
          schema:
            type: string
            enum: [desc, asc]
          description: The direction to sort the results
        - name: includeAttributes
          in: query
          schema:
            type: boolean
          description: Whether to include attribute information
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                # Define the response schema here
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal server error

  /v3/rtp/ethereum/collections/v7:
    get:
      tags:
        - Ethereum
      summary: Fetch collection details from Magic Eden
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
          description: Collection ID
        - in: query
          name: limit
          schema:
            type: integer
          description: Maximum number of collections to return
        - in: query
          name: includeSalesCount
          schema:
            type: boolean
          description: Whether to include sales count
        - in: query
          name: excludeSpam
          schema:
            type: boolean
          description: Whether to exclude spam collections
        - in: query
          name: displayCurrency
          schema:
            type: string
          description: Display currency contract address
      responses:
        "200":
          description: Successful response containing collection details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FetchCollectionDetailsResponse"
        "400":
          description: Bad request, invalid parameters
          content:
            application/json:
              example:
                message: Bad request, invalid parameters
        "500":
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error

  /ethereum/collection/bids:
    get:
      tags:
        - Ethereum
      summary: Fetch Ethereum collection bids
      description: Fetches active bids for a specific Ethereum collection.
      parameters:
        - name: collection
          in: query
          required: true
          schema:
            type: string
          description: The Ethereum contract address of the collection.
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            enum: [price]
          description: The field to sort the bids by.
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [active]
          description: The status of the bids to fetch.
        - name: excludeEOA
          in: query
          required: false
          schema:
            type: string
            enum: [true, false]
          description: Whether to exclude EOA (Externally Owned Accounts).
        - name: includeCriteriaMetadata
          in: query
          required: false
          schema:
            type: string
            enum: [true, false]
          description: Whether to include criteria metadata.
        - name: includeDepth
          in: query
          required: false
          schema:
            type: string
            enum: [true, false]
          description: Whether to include depth information.
        - name: normalizeRoyalties
          in: query
          required: false
          schema:
            type: string
            enum: [true, false]
          description: Whether to normalize royalties.
      responses:
        "200":
          description: A list of active bids for the specified Ethereum collection.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EthereumFetchCollectionBidsResponse"
              examples:
                example1:
                  value:
                    orders:
                      - id: "0x62c66da28dbe812101d4d4fb8a45d00e94353115f6969f20421a41b7322729ec"
                        kind: "blur"
                        side: "buy"
                        status: "active"
                        tokenSetId: "contract:0x306b1ea3ecdf94ab739f1910bbda052ed4a9f949"
                        tokenSetSchemaHash: "0x0000000000000000000000000000000000000000000000000000000000000000"
                        contract: "0x306b1ea3ecdf94ab739f1910bbda052ed4a9f949"
                        contractKind: "erc721"
                        maker: "0x0000000000a39bb272e79075ade125fd351887ac"
                        taker: "0x0000000000000000000000000000000000000000"
                        price:
                          currency:
                            contract: "0x0000000000a39bb272e79075ade125fd351887ac"
                            name: "Blur ETH"
                            symbol: "BETH"
                            decimals: 18
                          amount:
                            raw: "170000000000000000"
                            decimal: 0.17
                            usd: 615.04374
                            native: 0.17
                          netAmount:
                            raw: "169150000000000000"
                            decimal: 0.16915
                            usd: 611.96852
                            native: 0.16915
                        validFrom: 1718706296
                        validUntil: 0
                        quantityFilled: 0
                        quantityRemaining: 2897
                        criteria:
                          kind: "collection"
                          data:
                            collection:
                              id: "0x306b1ea3ecdf94ab739f1910bbda052ed4a9f949"
                              name: "BEANZ Official"
                              image: "https://i.seadn.io/gae/_R4fuC4QGYd14-KwX2bD1wf-AWjDF2VMabfqWFJhIgiN2FnAUpnD5PLdJORrhQ8gly7KcjhQZZpuzYVPF7CDSzsqmDh97z84j2On?w=500&auto=format"
                        source:
                          id: "0xe073a3b3497e2ed4c6110eebbb664a839b168bcb"
                          domain: "blur.io"
                          name: "Blur"
                          icon: "https://blur.io/favicons/180.png"
                          url: "https://blur.io/asset/0x18b9db07cf194aac853daaa076d421b1dd0c75b0/${tokenId}"
                        feeBps: 50
                        feeBreakdown:
                          - kind: "royalty"
                            recipient: "0xb4d24dacbdffa1bbf9a624044484b3feeb7fdf74"
                            bps: 50
                        expiration: 0
                        isReservoir: null
                        createdAt: "2023-04-14T10:28:23.222Z"
                        updatedAt: "2024-06-18T10:24:56.811Z"
                        originatedAt: null
                        depth:
                          - price: 0.1691
                            quantity: 1460
                          - price: 0.1592
                            quantity: 41
                          - price: 0.1492
                            quantity: 8
                          - price: 0.1393
                            quantity: 7
                          - price: 0.1293
                            quantity: 6
                          - price: 0.1194
                            quantity: 222
                          - price: 0.1095
                            quantity: 172
                          - price: 0.0995
                            quantity: 37
                          - price: 0.0896
                            quantity: 3
                          - price: 0.0796
                            quantity: 5
                          - price: 0.0697
                            quantity: 2
                          - price: 0.0597
                            quantity: 204
                          - price: 0.0498
                            quantity: 110
                          - price: 0.0398
                            quantity: 36
                          - price: 0.0299
                            quantity: 39
                          - price: 0.0199
                            quantity: 223
                          - price: 0.01
                            quantity: 322
                    continuation: "MTg5MDAwMDAwMDAwMDAwXzB4MzgwOTMyZDcxN2E3ZGY3YzI5OTUwYzczYTI3NWZjNzUxYzZjYTMxOGYxZjZhMzk2NjEwMTM3YjdmOWIzMjMyZg=="
  /v3/rtp/ethereum/collections/activity/v6:
    get:
      summary: Fetch Ethereum collection activity
      tags:
        - Ethereum
      parameters:
        - in: query
          name: collection
          required: true
          schema:
            type: string
            example: "0x306b1ea3ecdf94ab739f1910bbda052ed4a9f949"
          description: The Ethereum collection address
        - in: query
          name: types
          required: true
          schema:
            type: array
            items:
              type: string
              enum: ["sale", "ask", "bid", "transfer", "mint"]
          description: |
            Types of activities to fetch. Can include multiple types (sale, ask, bid, transfer, mint).
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EthereumActivityResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Bad request parameters

  /users/{address}/collections/v4:
    get:
      tags:
        - Ethereum
      summary: Fetch Ethereum user collections
      description: Fetch the collections of a specific Ethereum user.
      parameters:
        - name: address
          in: path
          required: true
          description: Ethereum address of the user
          schema:
            type: string
            example: "0x9adcFFff1DEf95F7E58B587c1A6B06Ac6A7aE1E5"
        - name: collection
          in: query
          required: true
          description: Collection contract address
          schema:
            type: string
            example: "0x07ce82f414a42d9a73b0bd9ec23c249d446a0109"
        - name: offset
          in: query
          required: false
          description: Pagination offset
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          required: false
          description: Number of results to return
          schema:
            type: integer
            default: 1
      responses:
        "200":
          description: Successful response with user collection details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EthereumUserCollection"
        "400":
          description: Bad request due to invalid parameters
        "500":
          description: Internal server error

  /v3/rtp/ethereum/tokens/v7:
    get:
      tags:
        - Ethereum
      summary: Fetch Ethereum Tokens
      description: Fetches Ethereum tokens from the specified collection with various filters and sorting options.
      parameters:
        - name: includeQuantity
          in: query
          required: false
          schema:
            type: boolean
          description: Whether to include quantity.
        - name: includeLastSale
          in: query
          required: false
          schema:
            type: boolean
          description: Whether to include the last sale.
        - name: excludeSpam
          in: query
          required: false
          schema:
            type: boolean
          description: Whether to exclude spam tokens.
        - name: excludeBurnt
          in: query
          required: false
          schema:
            type: boolean
          description: Whether to exclude burnt tokens.
        - name: collection
          in: query
          required: true
          schema:
            type: string
          description: The collection contract address.
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            enum: [floorAskPrice, otherPossibleSortFields]
            default: floorAskPrice
          description: The field to sort by.
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: The direction to sort the results.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 50
            minimum: 1
          description: The number of results to return.
        - name: includeAttributes
          in: query
          required: false
          schema:
            type: boolean
          description: Whether to include attributes.
        - name: normalizeRoyalties
          in: query
          required: false
          schema:
            type: boolean
          description: Whether to normalize royalties.
      responses:
        "200":
          description: A list of Ethereum tokens.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EthereumTokenResponse"
        "400":
          description: Bad Request
        "500":
          description: Server Error

  /auth/user/{walletAddress}:
    get:
      summary: Fetch user authentication data
      tags:
        - Ethereum
      parameters:
        - in: path
          name: walletAddress
          required: true
          schema:
            type: string
          description: The wallet address of the user
        - in: query
          name: enableSNS
          schema:
            type: boolean
          required: false
          default: true
          description: Flag to enable SNS (Social Network Sharing)
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAuthData"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not found

  /v3/rtp/ethereum/users/{walletAddress}/tokens/v10:
    get:
      tags:
        - Ethereum
      summary: Fetch user's NFT tokens
      parameters:
        - name: walletAddress
          in: path
          required: true
          schema:
            type: string
            example: "0x9adcFFff1DEf95F7E58B587c1A6B06Ac6A7aE1E5"
          description: The wallet address of the user
        - name: includeLastSale
          in: query
          required: false
          schema:
            type: boolean
            example: true
          description: Include last sale info in token data
        - name: excludeSpam
          in: query
          required: false
          schema:
            type: boolean
            example: true
          description: Exclude spam tokens
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 50
          description: Maximum number of tokens to fetch
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            example: "acquiredAt"
          description: Field to sort tokens by
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
            enum: [asc, desc]
            example: "desc"
          description: Sort direction (asc or desc)
        - name: onlyListed
          in: query
          required: false
          schema:
            type: boolean
            example: false
          description: Fetch only listed tokens
        - name: normalizeRoyalties
          in: query
          required: false
          schema:
            type: boolean
            example: false
          description: Normalize royalties in token data

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NFTData"
        "400":
          description: Invalid request parameters
        "404":
          description: User not found
        "500":
          description: Internal server error

  /v3/rtp/ethereum/execute/bid/v5:
    post:
      tags:
        - Ethereum
      summary: Place a bid on Magic Eden
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maker:
                  type: string
                  description: Wallet address of the maker
                  example: "0x1234567890abcdef1234567890abcdef12345678"
                source:
                  type: string
                  description: Source of the request
                  example: magiceden.io
                params:
                  type: array
                  items:
                    type: object
                    properties:
                      collection:
                        type: string
                        description: Collection identifier
                      currency:
                        type: string
                        description: Currency contract address
                        example: "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                      quantity:
                        type: integer
                        description: Quantity to bid
                        example: 1
                      weiPrice:
                        type: string
                        description: Bid price in wei
                        example: 1000000000000000000
                      expirationTime:
                        type: string
                        description: Expiration time in UNIX timestamp
                        example: 1625072400
                      orderKind:
                        type: string
                        example: payment-processor-v2
                      orderbook:
                        type: string
                        example: reservoir
                      options:
                        type: object
                        properties:
                          payment-processor-v2:
                            type: object
                            properties:
                              useOffChainCancellation:
                                type: boolean
                                example: true
                      automatedRoyalties:
                        type: boolean
                        description: Whether to automate royalties
                        example: true
      responses:
        "200":
          description: Successful bid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrderData"
        "400":
          description: Bad request
        "500":
          description: Server error

  /v3/rtp/ethereum/order/v4:
    post:
      tags:
        - Ethereum
      summary: Submit Signed Order Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      order:
                        type: object
                        properties:
                          kind:
                            type: string
                            example: payment-processor-v2
                          data:
                            type: object
                            properties:
                              kind:
                                type: string
                                example: collection-offer-approval
                              sellerOrBuyer:
                                type: string
                              protocol:
                                type: number
                              cosigner:
                                type: string
                              marketplace:
                                type: string
                              paymentMethod:
                                type: string
                              tokenAddress:
                                type: string
                              amount:
                                type: string
                              itemPrice:
                                type: string
                              expiration:
                                type: string
                              marketplaceFeeNumerator:
                                type: string
                              nonce:
                                type: string
                              masterNonce:
                                type: string
                              fallbackRoyaltyRecipient:
                                type: string
                              beneficiary:
                                type: string
                              r:
                                type: string
                                example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                              s:
                                type: string
                                example: "0x0000000000000000000000000000000000000000000000000000000000000000"
                              v:
                                type: number
                                example: 0
                      orderbook:
                        type: string
                        example: reservoir
                source:
                  type: string
                  example: magiceden.io
      parameters:
        - name: signature
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
        "400":
          description: Bad request
        "500":
          description: Server error
  /v3/rtp/ethereum/execute/list/v5:
    post:
      tags:
        - Ethereum
      summary: Create a new NFT listing on Magic Eden
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maker:
                  type: string
                  description: Wallet address of the maker
                  example: 0xb71425024868e0c9156c3942AC115Cd3b56d5559
                source:
                  type: string
                  description: Source of the request
                  example: magiceden.io
                params:
                  type: array
                  items:
                    type: object
                    properties:
                      token:
                        type: string
                        description: Token identifier
                        example: 0x361A5881f18b968422E9258cB7c1FA53FF4cdD38:3059
                      weiPrice:
                        type: string
                        description: Listing price in wei
                        example: 40000000000000000
                      orderbook:
                        type: string
                        example: reservoir
                      orderKind:
                        type: string
                        example: payment-processor-v2
                      quantity:
                        type: integer
                        description: Quantity to list
                        example: 1
                      currency:
                        type: string
                        example: 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2
                      expirationTime:
                        type: string
                        description: Expiration time in UNIX timestamp
                        example: "1722542894"
                      automatedRoyalties:
                        type: boolean
                        description: Whether to automate royalties
                        example: true
                      options:
                        type: object
                        properties:
                          payment-processor-v2:
                            type: object
                            properties:
                              useOffChainCancellation:
                                type: boolean
                                example: true
      responses:
        "200":
          description: Listing created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      steps:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  data:
                                    type: object
                                    properties:
                                      sign:
                                        type: object
        "400":
          description: Bad request
        "500":
          description: Server error

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-NFT-API-Key
  schemas:
    ListStep:
      type: object
      properties:
        id:
          type: string
        items:
          type: array
          items:
            type: object
            properties:
              data:
                type: object
                properties:
                  sign:
                    $ref: "#/components/schemas/ListSign"
    ListSign:
      type: object
      properties:
        domain:
          $ref: "#/components/schemas/ListDomain"
        types:
          $ref: "#/components/schemas/ListTypes"
        value:
          $ref: "#/components/schemas/ListValue"
    ListDomain:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        chainId:
          type: string
        verifyingContract:
          type: string
    ListTypes:
      type: object
      properties:
        SaleApproval:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
    ListValue:
      type: object
      properties:
        seller:
          type: string
        protocol:
          type: number
        cosigner:
          type: string
        marketplace:
          type: string
        paymentMethod:
          type: string
        tokenAddress:
          type: string
        amount:
          type: string
        itemPrice:
          type: string
        expiration:
          type: string
        marketplaceFeeNumerator:
          type: string
        nonce:
          type: string
        masterNonce:
          type: string
        fallbackRoyaltyRecipient:
          type: string
        beneficiary:
          type: string
        v:
          type: number
        r:
          type: string
          example: 0x0000000000000000000000000000000000000000000000000000000000000000
        s:
          type: string
          example: 0x0000000000000000000000000000000000000000000000000000000000000000
    CreateOrderData:
      type: object
      properties:
        steps:
          type: array
          items:
            $ref: "#/components/schemas/Step"
        errors:
          type: array
          items:
            type: object
    Step:
      type: object
      properties:
        id:
          type: string
        action:
          type: string
        description:
          type: string
        kind:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item"
    Item:
      type: object
      properties:
        status:
          type: string
        data:
          $ref: "#/components/schemas/ItemData"
        orderIndexes:
          type: array
          items:
            type: integer
    ItemData:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        data:
          type: string
        value:
          type: string
        sign:
          $ref: "#/components/schemas/Sign"
        post:
          $ref: "#/components/schemas/Post"
    Sign:
      type: object
      properties:
        signatureKind:
          type: string
        domain:
          $ref: "#/components/schemas/Domain"
        types:
          $ref: "#/components/schemas/Types"
        value:
          $ref: "#/components/schemas/Value"
        primaryType:
          type: string
    Domain:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        chainId:
          type: string
        verifyingContract:
          type: string
    Post:
      type: object
      properties:
        endpoint:
          type: string
        method:
          type: string
        body:
          $ref: "#/components/schemas/PostBody"
    Types:
      type: object
      properties:
        CollectionOfferApproval:
          type: array
          items:
            $ref: "#/components/schemas/CollectionOfferApproval"
    Value:
      type: object
      properties:
        protocol:
          type: integer
        cosigner:
          type: string
        buyer:
          type: string
        beneficiary:
          type: string
        marketplace:
          type: string
        fallbackRoyaltyRecipient:
          type: string
        paymentMethod:
          type: string
        tokenAddress:
          type: string
        amount:
          type: string
        itemPrice:
          type: string
        expiration:
          type: string
        marketplaceFeeNumerator:
          type: string
        nonce:
          type: string
        masterNonce:
          type: string
    PostBody:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/PostItem"
        source:
          type: string
    PostItem:
      type: object
      properties:
        order:
          $ref: "#/components/schemas/Order"
        collection:
          type: string
        isNonFlagged:
          type: boolean
        orderbook:
          type: string
    Order:
      type: object
      properties:
        kind:
          type: string
        data:
          $ref: "#/components/schemas/OrderData"
    OrderData:
      type: object
      properties:
        kind:
          type: string
        protocol:
          type: integer
        cosigner:
          type: string
        sellerOrBuyer:
          type: string
        marketplace:
          type: string
        paymentMethod:
          type: string
        tokenAddress:
          type: string
        amount:
          type: string
        itemPrice:
          type: string
        expiration:
          type: string
        marketplaceFeeNumerator:
          type: string
        nonce:
          type: string
        masterNonce:
          type: string
        fallbackRoyaltyRecipient:
          type: string
        beneficiary:
          type: string
        v:
          type: integer
        r:
          type: string
        s:
          type: string
    CollectionOfferApproval:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
    ListedNft:
      type: object
      properties:
        isCompressed:
          type: boolean
        isTradeable:
          type: boolean
        tokenOwnershipStandard:
          type: string
        mintAddress:
          type: string
        supply:
          type: integer
        title:
          type: string
        primarySaleHappened:
          type: boolean
        updateAuthority:
          type: string
        onChainCollection:
          $ref: "#/components/schemas/OnChainCollection"
        sellerFeeBasisPoints:
          type: integer
        creators:
          type: array
          items:
            $ref: "#/components/schemas/Creator"
        price:
          type: number
        solPrice:
          $ref: "#/components/schemas/SolPrice"
        escrowPubkey:
          type: string
        img:
          type: string
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/Attribute"
        properties:
          $ref: "#/components/schemas/Properties"
        propertyCategory:
          type: string
        animationURL:
          type: string
        externalURL:
          type: string
        content:
          type: string
        collectionName:
          type: string
        collectionTitle:
          type: string
        owner:
          type: string
        id:
          type: string
        listingType:
          type: string
        listingUpdatedAt:
          $ref: "#/components/schemas/Timestamp"
        updatedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        tokenStandard:
          type: integer
    OnChainCollection:
      type: object
      properties:
        key:
          type: string
        verified:
          type: integer
        data:
          $ref: "#/components/schemas/CollectionData"

    CollectionData:
      type: object
      properties:
        name:
          type: string
        image:
          type: string
        description:
          type: string

    Creator:
      type: object
      properties:
        share:
          type: integer
        address:
          type: string
        verified:
          type: boolean

    SolPrice:
      type: object
      properties:
        rawAmount:
          type: string
        address:
          type: string
        decimals:
          type: integer

    Attribute:
      type: object
      properties:
        trait_type:
          type: string
        value:
          type: string

    Properties:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: "#/components/schemas/File"
        category:
          type: string
        creators:
          type: array
          items:
            $ref: "#/components/schemas/Creator"

    File:
      type: object
      properties:
        uri:
          type: string
        type:
          type: string

    Timestamp:
      type: object
      properties:
        updatedAt:
          type: string
          format: date-time
        slot:
          type: integer

    CollectionStats:
      type: object
      properties:
        chain:
          type: string
          example: base
        name:
          type: string
          example: Zillas Based
        collectionSymbol:
          type: string
          example: zillas-based
        collectionId:
          type: string
          example: 0x814899ff414bcc7e8c396bbbd7f7a3178855ae90
        vol:
          type: number
          example: 0.01157
        totalVol:
          type: number
          example: 0.179319999
        volPctChg:
          type: number
          example: -86.83431953
        txns:
          type: integer
          example: 106
        txnsPctChg:
          type: number
          example: -52.46636771
        fp:
          type: number
          example: 0.00004
        fpPctChg:
          type: number
          example: 33.33333333333335
        fpListingPrice:
          type: number
          example: 0.00004
        fpListingCurrency:
          type: string
          example: ETH
        highestGlobalOfferBidCurrency:
          type: string
          example: ETH
        marketCap:
          type: number
          example: 0.35552
        totalSupply:
          type: integer
          example: 8888
        listedCount:
          type: integer
          example: 917
        ownerCount:
          type: integer
          example: 2162
        uniqueOwnerRatio:
          type: number
          example: 0.24324932493249324
        image:
          type: string
          example: https://img.reservoir.tools/images/v2/base/z9JRSpLYGu7%2BCZoKWtAuAHHi8sdkiV1ldJ1nW3bLOdz4KNjnrqaKjQ0AC6UYBj0MDdvnAL2nEa%2FQjjm%2BT%2BPwXC4ijUidVLxQ%2F4jPy7w7R6PUaHwew3CWDae2vie9jJyRLKXaFN2t%2F00b%2FQdqQQv%2BdQ%3D%3D?width=250
        isCompressed:
          type: boolean
          example: false
        isVerified:
          type: boolean
          example: false
        hasInscriptions:
          type: boolean
          example: false
        currency:
          type: string
          example: ETH
        currencyUsdRate:
          type: number
          example: 3768.53
        marketCapUsd:
          type: number
          example: 1339.7877856
    FetchCollectionDetailsResponse:
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: "#/components/schemas/Collection"
            continuation:
            type: string
    Collection:
      type: object
      properties:
        chainId:
          type: integer
        id:
          type: string
        slug:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
        symbol:
          type: string
        contractDeployedAt:
          type: string
          format: date-time
        image:
          type: string
          format: uri
        banner:
          type: string
          format: uri
        twitterUrl:
          type: string
          nullable: true
          format: uri
        discordUrl:
          type: string
        externalUrl:
          type: string
          format: uri
        twitterUsername:
          type: string
        openseaVerificationStatus:
          type: string
        magicedenVerificationStatus:
          type: string
          nullable: true
        description:
          type: string
        metadataDisabled:
          type: boolean
        isSpam:
          type: boolean
        isNsfw:
          type: boolean
        isMinting:
          type: boolean
        sampleImages:
          type: array
          items:
            type: string
            format: uri
        tokenCount:
          type: string
        onSaleCount:
          type: string
        primaryContract:
          type: string
        tokenSetId:
          type: string
        creator:
          type: string
        isSharedContract:
          type: boolean
        royalties:
          type: object
          properties:
            recipient:
              type: string
            breakdown:
              type: array
              items:
                type: object
                properties:
                  bps:
                    type: integer
                  recipient:
                    type: string
              minItems: 1
            bps:
              type: integer
        allRoyalties:
          type: object
          properties:
            onchain:
              type: array
              items:
                type: object
                properties:
                  bps:
                    type: integer
                  recipient:
                    type: string
              minItems: 1
            opensea:
              type: array
              items:
                type: object
                properties:
                  bps:
                    type: integer
                  required:
                    type: boolean
                  recipient:
                    type: string
              minItems: 1
        floorAsk:
          type: object
          properties:
            id:
              type: string
            sourceDomain:
              type: string
            price:
              type: object
              properties:
                currency:
                  type: object
                  properties:
                    contract:
                      type: string
                    name:
                      type: string
                    symbol:
                      type: string
                    decimals:
                      type: integer
                amount:
                  type: object
                  properties:
                    raw:
                      type: string
                    decimal:
                      type: number
                    usd:
                      type: number
                    native:
                      type: number
            maker:
              type: string
            validFrom:
              type: integer
            validUntil:
              type: integer
            token:
              type: object
              properties:
                contract:
                  type: string
                tokenId:
                  type: string
                name:
                  type: string
                image:
                  type: string
                  format: uri
        topBid:
          type: object
          properties:
            id:
              type: string
            sourceDomain:
              type: string
            price:
              type: object
              properties:
                currency:
                  type: object
                  properties:
                    contract:
                      type: string
                    name:
                      type: string
                    symbol:
                      type: string
                    decimals:
                      type: integer
                amount:
                  type: object
                  properties:
                    raw:
                      type: string
                    decimal:
                      type: number
                    usd:
                      type: number
                    native:
                      type: number
                netAmount:
                  type: object
                  properties:
                    raw:
                      type: string
                    decimal:
                      type: number
                    usd:
                      type: number
                    native:
                      type: number
            maker:
              type: string
            validFrom:
              type: integer
            validUntil:
              type: integer
        rank:
          type: object
          properties:
            "1day":
              type: integer
            "7day":
              type: integer
            "30day":
              type: integer
            allTime:
              type: integer
        volume:
          type: object
          properties:
            "1day":
              type: number
            "7day":
              type: number
            "30day":
              type: number
            allTime:
              type: number
        volumeChange:
          type: object
          properties:
            "1day":
              type: number
            "7day":
              type: number
            "30day":
              type: number
        floorSale:
          type: object
          properties:
            "1day":
              type: number
            "7day":
              type: number
            "30day":
              type: number
        floorSaleChange:
          type: object
          properties:
            "1day":
              type: number
            "7day":
              type: number
            "30day":
              type: number
        salesCount:
          type: object
          properties:
            "1day":
              type: string
            "7day":
              type: string
            "30day":
              type: string
            allTime:
              type: string
        collectionBidSupported:
          type: boolean
        ownerCount:
          type: integer
        contractKind:
          type: string
        mintedTimestamp:
          type: string
          nullable: true
          format: date-time
        mintStages:
          type: array
          items:
            type: object
      required:
        - chainId
        - id
        - slug
        - createdAt
        - updatedAt
        - name
        - symbol
        - contractDeployedAt
        - image
        - banner
        - discordUrl
        - externalUrl
        - twitterUsername
        - openseaVerificationStatus
        - description
        - metadataDisabled
        - isSpam
        - isNsfw
        - isMinting
        - sampleImages
        - tokenCount
        - onSaleCount
        - primaryContract
        - tokenSetId
        - creator
        - isSharedContract
        - royalties
        - allRoyalties
        - floorAsk
        - topBid
        - rank
        - volume
        - volumeChange
        - floorSale
        - floorSaleChange
        - salesCount
        - collectionBidSupported
        - ownerCount
        - contractKind
        - mintedTimestamp
        - mintStages
    EthereumFetchCollectionBidsResponse:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: "#/components/schemas/EthereumOrder"
        continuation:
          type: string
    EthereumOrder:
      type: object
      properties:
        id:
          type: string
        kind:
          type: string
        side:
          type: string
        status:
          type: string
        tokenSetId:
          type: string
        tokenSetSchemaHash:
          type: string
        contract:
          type: string
        contractKind:
          type: string
        maker:
          type: string
        taker:
          type: string
        price:
          $ref: "#/components/schemas/EthereumPrice"
        validFrom:
          type: number
        validUntil:
          type: number
        quantityFilled:
          type: number
        quantityRemaining:
          type: number
        criteria:
          $ref: "#/components/schemas/EthereumCriteria"
        source:
          $ref: "#/components/schemas/EthereumSource"
        feeBps:
          type: number
        feeBreakdown:
          type: array
          items:
            $ref: "#/components/schemas/EthereumFeeBreakdown"
        expiration:
          type: number
        isReservoir:
          type: boolean
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        originatedAt:
          type: string
          format: date-time
          nullable: true
        depth:
          type: array
          items:
            $ref: "#/components/schemas/EthereumDepth"
    EthereumPrice:
      type: object
      properties:
        currency:
          $ref: "#/components/schemas/EthereumCurrency"
        amount:
          $ref: "#/components/schemas/EthereumAmount"
        netAmount:
          $ref: "#/components/schemas/EthereumAmount"
    EthereumCurrency:
      type: object
      properties:
        contract:
          type: string
        name:
          type: string
        symbol:
          type: string
        decimals:
          type: number
    EthereumCriteria:
      type: object
      properties:
        kind:
          type: string
          description: Kind of criteria (token, attribute, etc.)
        data:
          $ref: "#/components/schemas/EthereumCriteriaData"
          description: Data associated with the criteria
    EthereumCollection:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        image:
          type: string
    EthereumSource:
      type: object
      properties:
        id:
          type: string
        domain:
          type: string
        name:
          type: string
        icon:
          type: string
        url:
          type: string
    EthereumFeeBreakdown:
      type: object
      properties:
        kind:
          type: string
        recipient:
          type: string
        bps:
          type: number
    EthereumDepth:
      type: object
      properties:
        price:
          type: number
        quantity:
          type: number
    EthereumActivityResponse:
      type: object
      properties:
        activities:
          type: array
          items:
            $ref: "#/components/schemas/EthereumActivity"
          description: List of Ethereum activities
        continuation:
          type: string
          example: "171870779548_d0fb9b8e396dd4093cde51c9978f0c52d1ee5034080e4d42"
          description: Continuation token for pagination
    EthereumActivity:
      type: object
      properties:
        type:
          type: string
          description: Type of activity (e.g., bid, sale, ask)
        fromAddress:
          type: string
          nullable: true
          description: Address from which the activity originated
        toAddress:
          type: string
          nullable: true
          description: Address to which the activity is directed
        price:
          $ref: "#/components/schemas/EthereumCollectionPrice"
          description: Price details of the activity
        amount:
          type: number
          description: Amount associated with the activity
        timestamp:
          type: number
          description: Unix timestamp of when the activity occurred
        createdAt:
          type: string
          format: date-time
          description: Date and time when the activity was created
        contract:
          type: string
          description: Ethereum contract address related to the activity
        token:
          $ref: "#/components/schemas/EthereumToken"
          description: Token details associated with the activity
        collection:
          $ref: "#/components/schemas/EthereumActivityCollection"
          description: Collection details associated with the activity
        order:
          $ref: "#/components/schemas/EthereumCollectionOrder"
          description: Order details associated with the activity
    EthereumCollectionPrice:
      type: object
      properties:
        currency:
          $ref: "#/components/schemas/EthereumCurrency"
          description: Currency details
        amount:
          $ref: "#/components/schemas/EthereumAmount"
          description: Amount details

    EthereumAmount:
      type: object
      properties:
        raw:
          type: string
          description: Raw amount in the smallest unit of the currency
        decimal:
          type: number
          description: Amount in decimal format
        usd:
          type: number
          description: Amount in USD
        native:
          type: number
          description: Amount in native currency

    EthereumToken:
      type: object
      properties:
        tokenId:
          type: string
          nullable: true
          description: Token ID associated with the activity
        isSpam:
          type: boolean
          description: Indicates if the token is considered spam
        isNsfw:
          type: boolean
          description: Indicates if the token is considered NSFW
        tokenName:
          type: string
          nullable: true
          description: Name of the token
        tokenImage:
          type: string
          nullable: true
          description: URL to the image of the token
        rarityScore:
          type: number
          nullable: true
          description: Rarity score of the token
        rarityRank:
          type: number
          nullable: true
          description: Rarity rank of the token

    EthereumActivityCollection:
      type: object
      properties:
        collectionId:
          type: string
          description: Collection ID associated with the activity
        isSpam:
          type: boolean
          description: Indicates if the collection is considered spam
        isNsfw:
          type: boolean
          description: Indicates if the collection is considered NSFW
        collectionName:
          type: string
          description: Name of the collection
        collectionImage:
          type: string
          description: URL to the image of the collection

    EthereumCollectionOrder:
      type: object
      properties:
        id:
          type: string
          description: ID of the order associated with the activity
        side:
          type: string
          description: Side of the order (bid, ask, etc.)
        source:
          $ref: "#/components/schemas/EthereumCollectionSource"
          description: Source details of the order
        criteria:
          $ref: "#/components/schemas/EthereumCriteria"
          description: Criteria details of the order

    EthereumCollectionSource:
      type: object
      properties:
        domain:
          type: string
          description: Domain associated with the source
        name:
          type: string
          description: Name of the source
        icon:
          type: string
          description: URL to the icon of the source

    EthereumCriteriaData:
      type: object
      properties:
        collection:
          $ref: "#/components/schemas/EthereumCollectionData"
          description: Collection data associated with the criteria
        token:
          $ref: "#/components/schemas/EthereumTokenData"
          description: Token data associated with the criteria
        attribute:
          $ref: "#/components/schemas/EthereumAttributeData"
          description: Attribute data associated with the criteria

    EthereumCollectionData:
      type: object
      properties:
        id:
          type: string
          description: Collection ID associated with the criteria
        name:
          type: string
          description: Name of the collection associated with the criteria
        image:
          type: string
          description: URL to the image of the collection associated with the criteria
        isSpam:
          type: boolean
          description: Indicates if the collection is considered spam
        isNsfw:
          type: boolean
          description: Indicates if the collection is considered NSFW

    EthereumTokenData:
      type: object
      properties:
        tokenId:
          type: string
          description: Token ID associated with the criteria
        name:
          type: string
          nullable: true
          description: Name of the token associated with the criteria
        image:
          type: string
          nullable: true
          description: URL to the image of the token associated with the criteria
        isSpam:
          type: boolean
          description: Indicates if the token is considered spam
        isNsfw:
          type: boolean
          description: Indicates if the token is considered NSFW

    EthereumAttributeData:
      type: object
      properties:
        key:
          type: string
          description: Key of the attribute associated with the criteria
        value:
          type: string
          description: Value of the attribute associated with the criteria

    EthereumUserCollection:
      type: object
      properties:
        collection:
          type: object
          properties:
            id:
              type: string
            slug:
              type: string
            name:
              type: string
            image:
              type: string
            isSpam:
              type: boolean
            banner:
              type: string
            twitterUrl:
              type: string
              nullable: true
            discordUrl:
              type: string
            externalUrl:
              type: string
            twitterUsername:
              type: string
            openseaVerificationStatus:
              type: string
            description:
              type: string
            metadataDisabled:
              type: boolean
            sampleImages:
              type: array
              items:
                type: string
            tokenCount:
              type: string
            primaryContract:
              type: string
            tokenSetId:
              type: string
            floorAskPrice:
              type: object
              properties:
                currency:
                  type: object
                  properties:
                    contract:
                      type: string
                    name:
                      type: string
                    symbol:
                      type: string
                    decimals:
                      type: integer
                amount:
                  type: object
                  properties:
                    raw:
                      type: string
                    decimal:
                      type: number
                    usd:
                      type: number
                    native:
                      type: number
            rank:
              type: object
              properties:
                1day:
                  type: integer
                  nullable: true
                7day:
                  type: integer
                  nullable: true
                30day:
                  type: integer
                  nullable: true
                allTime:
                  type: integer
            volume:
              type: object
              properties:
                1day:
                  type: number
                7day:
                  type: number
                30day:
                  type: number
                allTime:
                  type: number
            volumeChange:
              type: object
              properties:
                1day:
                  type: number
                7day:
                  type: number
                30day:
                  type: number
            floorSale:
              type: object
              properties:
                1day:
                  type: number
                7day:
                  type: number
                30day:
                  type: number
            contractKind:
              type: string
        ownership:
          type: object
          properties:
            tokenCount:
              type: string
            totalValue:
              type: number

    EthereumTokenResponse:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: "#/components/schemas/Token"
        continuation:
          type: string
          nullable: true

    Token:
      type: object
      properties:
        token:
          $ref: "#/components/schemas/TokenDetails"
        market:
          $ref: "#/components/schemas/MarketDetails"
        media:
          $ref: "#/components/schemas/MediaDetails"

    TokenDetails:
      type: object
      properties:
        chainId:
          type: integer
        contract:
          type: string
        tokenId:
          type: string
        name:
          type: string
        description:
          type: string
        image:
          type: string
        imageSmall:
          type: string
        imageLarge:
          type: string
        metadata:
          $ref: "#/components/schemas/Metadata"
        media:
          type: string
        kind:
          type: string
        isFlagged:
          type: boolean
        isSpam:
          type: boolean
        isNsfw:
          type: boolean
        metadataDisabled:
          type: boolean
        lastFlagUpdate:
          type: string
          format: date-time
        lastFlagChange:
          type: string
          format: date-time
          nullable: true
        supply:
          type: string
        remainingSupply:
          type: string
        rarity:
          type: number
        rarityRank:
          type: integer
        collection:
          $ref: "#/components/schemas/CollectionDetails"
        lastSale:
          $ref: "#/components/schemas/LastSale"
          nullable: true
        owner:
          type: string
        mintedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        decimals:
          type: integer
          nullable: true
        mintStages:
          type: array
          items:
            type: object

    Metadata:
      type: object
      properties:
        imageOriginal:
          type: string
        mediaOriginal:
          type: string
        imageMimeType:
          type: string
        mediaMimeType:
          type: string
        tokenURI:
          type: string

    CollectionDetails:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        image:
          type: string
        slug:
          type: string
        symbol:
          type: string
          nullable: true
        creator:
          type: string
        tokenCount:
          type: integer
        metadataDisabled:
          type: boolean
        floorAskPrice:
          $ref: "#/components/schemas/FloorAskPrice"

    FloorAskPrice:
      type: object
      properties:
        currency:
          $ref: "#/components/schemas/Currency"
        amount:
          $ref: "#/components/schemas/Amount"

    Currency:
      type: object
      properties:
        contract:
          type: string
        name:
          type: string
        symbol:
          type: string
        decimals:
          type: integer

    Amount:
      type: object
      properties:
        raw:
          type: string
        decimal:
          type: number
        usd:
          type: number
        native:
          type: number

    LastSale:
      type: object
      properties:
        orderSource:
          type: string
          nullable: true
        fillSource:
          type: string
          nullable: true
        timestamp:
          type: integer
        price:
          $ref: "#/components/schemas/Price"

    Price:
      type: object
      properties:
        currency:
          $ref: "#/components/schemas/Currency"
        amount:
          $ref: "#/components/schemas/Amount"

    MarketDetails:
      type: object
      properties:
        floorAsk:
          $ref: "#/components/schemas/FloorAsk"
        updatedAt:
          type: string
          format: date-time

    FloorAsk:
      type: object
      properties:
        id:
          type: string
        price:
          $ref: "#/components/schemas/Price"
        maker:
          type: string
        validFrom:
          type: integer
        validUntil:
          type: integer
        quantityFilled:
          type: string
        quantityRemaining:
          type: string
        source:
          $ref: "#/components/schemas/Source"

    Source:
      type: object
      properties:
        id:
          type: string
        domain:
          type: string
        name:
          type: string
        icon:
          type: string

    MediaDetails:
      type: object
      properties:
        image:
          type: string
        imageMimeType:
          type: string
        animationUrl:
          type: string
        animationMimeType:
          type: string
        animationEnabled:
          type: boolean

    TokenMetadata:
      type: object
      properties:
        imageOriginal:
          type: string
        imageMimeType:
          type: string
        tokenURI:
          type: string

    Royalty:
      type: object
      properties:
        bps:
          type: number
        recipient:
          type: string

    FeeBreakdown:
      type: object
      properties:
        kind:
          type: string
        bps:
          type: number
        recipient:
          type: string
        rawAmount:
          type: string
        source:
          type: string

    SaleInfo:
      type: object
      properties:
        orderSource:
          type: object # Define the structure based on actual data or as per your requirements
        fillSource:
          type: object # Define the structure based on actual data or as per your requirements
        timestamp:
          type: number
        price:
          type: object
          properties:
            currency:
              type: object
              properties:
                contract:
                  type: string
                name:
                  type: string
                symbol:
                  type: string
                decimals:
                  type: number
            amount:
              type: object
              properties:
                raw:
                  type: string
                decimal:
                  type: number
                usd:
                  type: number
                native:
                  type: number
            netAmount:
              type: object
              properties:
                raw:
                  type: string
                decimal:
                  type: number
                usd:
                  type: number
                native:
                  type: number
        marketplaceFeeBps:
          type: number
        paidFullRoyalty:
          type: object # Define the structure based on actual data or as per your requirements
        feeBreakdown:
          type: array
          items:
            $ref: "#/components/schemas/FeeBreakdown"

    OwnershipInfo:
      type: object
      properties:
        tokenCount:
          type: string
        onSaleCount:
          type: string
        floorAsk:
          $ref: "#/components/schemas/FloorAsk"
        acquiredAt:
          type: string

    MediaInfo:
      type: object
      properties:
        image:
          type: string
        imageMimeType:
          type: string

    NFT:
      type: object
      properties:
        chainId:
          type: number
        contract:
          type: string
        tokenId:
          type: string
        kind:
          type: string
        name:
          type: string
        image:
          type: string
        imageSmall:
          type: string
        imageLarge:
          type: string
        metadata:
          $ref: "#/components/schemas/TokenMetadata"
        description:
          type: string
        rarityScore:
          type: number
        rarityRank:
          type: number
        supply:
          type: string
        remainingSupply:
          type: string
        collection:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            slug:
              type: string
            symbol:
              type: string
            contractDeployedAt:
              type: string
            imageUrl:
              type: string
            isSpam:
              type: any
            isNsfw:
              type: any
            metadataDisabled:
              type: any
            openseaVerificationStatus:
              type: string
            tokenCount:
              type: string
            floorAsk:
              $ref: "#/components/schemas/FloorAsk"
            royaltiesBps:
              type: number
            royalties:
              type: array
              items:
                $ref: "#/components/schemas/Royalty"
        lastSale:
          $ref: "#/components/schemas/SaleInfo"
        floorAsk:
          $ref: "#/components/schemas/FloorAsk"
        lastAppraisalValue:
          type: number
        ownership:
          $ref: "#/components/schemas/OwnershipInfo"
        media:
          $ref: "#/components/schemas/MediaInfo"

    NFTData:
      type: object
      properties:
        tokens:
          type: array
          items:
            type: object
            properties:
              token:
                $ref: "#/components/schemas/NFT"
        continuation:
          type: string
          nullable: true
